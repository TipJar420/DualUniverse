{
  "slots": {
    "0": {
      "name": "slot1",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "1": {
      "name": "slot2",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "2": {
      "name": "slot3",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "3": {
      "name": "slot4",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "4": {
      "name": "slot5",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "5": {
      "name": "slot6",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "6": {
      "name": "slot7",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "7": {
      "name": "slot8",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "8": {
      "name": "slot9",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "9": {
      "name": "slot10",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "-1": {
      "name": "unit",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "-2": {
      "name": "system",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "-3": {
      "name": "library",
      "type": {
        "events": [],
        "methods": []
      }
    }
  },
  "handlers": [
    {
      "code": "GearSpeed   = 350 --export: Speed +-50km/h for auto gear deployment\n\n-- ***********************************************************\n\nlocal format          = string.format;\nlocal print           = system.print;\n\n-- ***********************************************************\n\nlocal unit_classes=\n{\n    CoreUnitDynamic  = { need = 1; meta = nil; },\n    ManualSwitchUnit = { need = 1; meta = nil; },\n    LightUnit        = { need = 1; meta = nil; },\n    LandingGearUnit  = { need = 1; meta = nil; }, \n};\n\n-- ***********************************************************\n\nfunction IdentifySlots()\n    local u = unit_classes;\n    for key,obj in pairs(unit) do\n        if (type(obj)==\"table\") and (obj.getElementClass~=nil) then\n            local class = obj.getElementClass();\n            local class_table = u[class];\n            if class_table then\n                 local unit = {};\n                 unit.obj=obj; \n                 setmetatable(unit,class_table.meta);\n                 class_table[#class_table+1]=unit; \n                else if class~=\"Generic\" then\n                \tprint(format(\"Unexpected unit class %s\",class));\n                end    \n            end    \n        end    \n    end    \n    local all_units_found=true;\n    for class_name,class_table in pairs(u) do\n        local n = #class_table;\n        if n < class_table.need then\n            all_units_found=false;\n            print(format(\"Missing unit type %s : %d of %d\",class_name,n,class_table.need));\n        end    \n    end    \n    return all_units_found;\nend\n\n-- ***********************************************************\nlocal last_gear_down = -1;\n\nfunction OnPeriodic()\n    local t  = system.getTime();\n    \n    local u           = unit_classes;\n    local core        = u.CoreUnitDynamic[1].obj;\n    local switch_gear = u.ManualSwitchUnit[1].obj;\n    local led_gear    = u.LightUnit[1].obj;\n    \n    local v_velo = vec3(core.getVelocity());\n    local speed  = v_velo:len();\n    local kmh    = speed * 3.6;\n    \n    local gear_down = switch_gear.getState();    \n\n    if kmh >= (GearSpeed + 50.0) and (gear_down==1) then\n        system.print(\"Auto closing gear \"  .. t);\n        switch_gear.deactivate();\n    end   \n\n    if kmh <= (GearSpeed - 50.0) and (gear_down==0) then\n        system.print(\"Auto deploying gear \" .. t);\n        switch_gear.activate();    \n    end   \n\n    if gear_down ~= last_gear_down then\n        last_gear_down = gear_down;\n        if (gear_down==1) then \n            led_gear.activate();\n            led_gear.setRGBColor(255,0,0);\n        else              \n            led_gear.activate(); \n            led_gear.setRGBColor(0,255,0);\n        end    \n    end       \n\nend\n\n-- ***********************************************************\n\n\nif IdentifySlots() then\n   print(\"Starting Gear Control\"); \n   unit.setTimer(\"Periodic\",1.0);\nend    \n\n",
      "filter": {
        "args": [],
        "signature": "start()",
        "slotKey": "-1"
      },
      "key": "0"
    },
    {
      "code": "",
      "filter": {
        "args": [],
        "signature": "stop()",
        "slotKey": "-1"
      },
      "key": "1"
    },
    {
      "code": "OnPeriodic();",
      "filter": {
        "args": [ { "value": "Periodic" } ],
        "signature": "tick(timerId)",
        "slotKey": "-1"
      },
      "key": "2"
    }
  ],
  "methods": [],
  "events": []
}